Looking for git in: git
Using git 2.11.0 from git
> git rev-parse --show-toplevel
fatal: Not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel
> git rev-parse --show-toplevel
> git rev-parse --show-toplevel
fatal: Not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel
fatal: Not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel
> git rev-parse --show-toplevel
> git rev-parse --show-toplevel
fatal: Not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel
> git config --get commit.template
Open repository: /home/coder/happy-elastic
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git check-ignore -z --stdin
> git status -z -u
> git rev-parse --show-toplevel
fatal: Not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel
> git config --get commit.template
Open repository: /home/coder/happy-elastic
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: Unable to read current working directory: No such file or directory
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git rev-parse --show-toplevel
> git rev-parse --show-toplevel
> git config --get commit.template
Open repository: /home/coder/happy-elastic
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git rev-parse --show-toplevel
> git rev-parse --show-toplevel
> git config --get commit.template
Open repository: /home/coder/happy-elastic
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git check-ignore -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git check-ignore -z --stdin
> git show :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git ls-tree -l HEAD -- /home/coder/happy-elastic/README.md
> git show c9fc071d696b287f8a769746c78c99d7a6ce2e72
> git show HEAD:README.md
git.stage 1
git.stage.scmResources 1
> git add -A -- /home/coder/happy-elastic/README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show :README.md
> git commit --quiet --allow-empty-message --file -

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: empty ident name (for <(null)>) not allowed
> git config --get-all user.name
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git show :README.md
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git ls-tree -l HEAD -- /home/coder/happy-elastic/README.md
> git show c9fc071d696b287f8a769746c78c99d7a6ce2e72
> git ls-files --stage -- /home/coder/happy-elastic/README.md
> git cat-file -s dca16bbbed4cf3f9f34d3646af3e1f5e955516dd
> git show dca16bbbed4cf3f9f34d3646af3e1f5e955516dd
> git show HEAD:README.md
> git show :README.md
> git commit --quiet --allow-empty-message --file -
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show HEAD:README.md
> git show :README.md
> git push origin master:master
To github.com:drighart/happy-elastic.git
   ae3af9c..3ac9e0f  master -> master
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show HEAD:README.md
> git show :README.md
> git check-ignore -z --stdin
> git show :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git ls-tree -l HEAD -- /home/coder/happy-elastic/README.md
> git show dca16bbbed4cf3f9f34d3646af3e1f5e955516dd
> git show HEAD:README.md
git.stage 1
git.stage.scmResources 1
> git add -A -- /home/coder/happy-elastic/README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show :README.md
> git ls-tree -l HEAD -- /home/coder/happy-elastic/README.md
> git show dca16bbbed4cf3f9f34d3646af3e1f5e955516dd
> git ls-files --stage -- /home/coder/happy-elastic/README.md
> git cat-file -s c9fc071d696b287f8a769746c78c99d7a6ce2e72
> git show c9fc071d696b287f8a769746c78c99d7a6ce2e72
> git show HEAD:README.md
> git show :README.md
> git commit --quiet --allow-empty-message --file -
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show HEAD:README.md
> git show :README.md
> git push origin master:master
To github.com:drighart/happy-elastic.git
   3ac9e0f..8ba44b2  master -> master
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
> git rev-list --left-right master...refs/remotes/origin/master
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show HEAD:README.md
> git show :README.md
> git checkout -q -b feature-david --no-track HEAD
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse feature-david
> git rev-parse --symbolic-full-name feature-david@{u}
fatal: no upstream configured for branch 'feature-david'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse feature-david
> git rev-parse --symbolic-full-name feature-david@{u}
fatal: no upstream configured for branch 'feature-david'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show HEAD:README.md
> git show :README.md
> git push
fatal: The current branch feature-david has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin feature-david
> git push -u origin feature-david
remote: 
remote: Create a pull request for 'feature-david' on GitHub by visiting:        
remote:      https://github.com/drighart/happy-elastic/pull/new/feature-david        
remote: 
To github.com:drighart/happy-elastic.git
 * [new branch]      feature-david -> feature-david
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse feature-david
> git rev-parse --symbolic-full-name feature-david@{u}
> git rev-list --left-right feature-david...refs/remotes/origin/feature-david
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse feature-david
> git rev-parse --symbolic-full-name feature-david@{u}
> git show HEAD:README.md
> git show :README.md
> git rev-list --left-right feature-david...refs/remotes/origin/feature-david
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse feature-david
> git rev-parse --symbolic-full-name feature-david@{u}
> git rev-list --left-right feature-david...refs/remotes/origin/feature-david
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
git.stage 1
git.stage.scmResources 1
> git add -A -- /home/coder/happy-elastic/README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse feature-david
> git rev-parse --symbolic-full-name feature-david@{u}
> git rev-list --left-right feature-david...refs/remotes/origin/feature-david
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse feature-david
> git rev-parse --symbolic-full-name feature-david@{u}
> git rev-list --left-right feature-david...refs/remotes/origin/feature-david
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git commit --quiet --allow-empty-message --file -
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse feature-david
> git rev-parse --symbolic-full-name feature-david@{u}
> git rev-list --left-right feature-david...refs/remotes/origin/feature-david
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git config --get commit.template
> git show :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse feature-david
> git rev-parse --symbolic-full-name feature-david@{u}
> git rev-list --left-right feature-david...refs/remotes/origin/feature-david
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git push origin feature-david:feature-david
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
